---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dex
  namespace: auth
spec:
  interval: 5m
  chart:
    spec:
      chart: dex
      version: 0.24.0
      sourceRef:
        kind: HelmRepository
        name: dex
        namespace: flux-system
      interval: 10m
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: -1
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  driftDetection:
    mode: enabled
  maxHistory: 3
  values:
    image:
      repository: dexidp/dex
      tag: v2.44.0
    env:
      KUBERNETES_POD_namespace: auth
    config:
      issuer: 'https://dex.${SECRET_TS_DOMAIN}'
      storage:
        type: kubernetes
        config:
          inCluster: true
      oauth2:
        alwaysShowLoginScreen: false
        responseTypes: ['code', 'token', 'id_token']
        skipApprovalScreen: true
      web:
        http: 0.0.0.0:5556
      frontend:
        issuer: 'dex'
        issuerUrl: 'https://dex.${SECRET_TS_DOMAIN}'
        logoUrl: https://raw.githubusercontent.com/raspbernetes/docs/master/website/static/img/logo.png
      expiry:
        signingKeys: '6h'
        idTokens: '24h'
      logger:
        level: debug
        format: json
      # Disable default email auth and only use oauth2 providers configured as connectors
      enablePasswordDB: false
      # Remember you can have multiple connectors of the same 'type' (with different 'id's)
      # If you need e.g. logins with groups for two different Microsoft 'tenants'
      connectors:
        # GitHub configure 'OAuth Apps' -> 'New OAuth App', add callback URL
        # https://github.com/settings/developers
        - type: github
          id: github
          name: GitHub
          config:
            clientID: '${SECRET_DEX_GITHUB_CLIENT_ID}'
            clientSecret: '${SECRET_DEX_GITHUB_CLIENT_SECRET}'
            redirectURI: 'https://dex.${SECRET_TS_DOMAIN}/callback'
            # 'orgs' can be used to map groups from Github
            # https://github.com/coreos/dex/blob/master/Documentation/connectors/github.md
            orgs:
              - name: fablabmuc-devops
      # The 'name' must match the k8s API server's 'oidc-client-id'
      staticClients:
       # - id: oauth2-proxy
       #   name: 'oauth2-proxy'
       #   secret: '${DEX_OAUTH2_PROXY_SECRET}'
       #   redirectURIs:
       #     - 'https://alert-manager.${SECRET_TS_DOMAIN}/oauth2/callback'
       #     - 'https://hass.${SECRET_TS_DOMAIN}/oauth2/callback'
       #     - 'https://kiali.${SECRET_TS_DOMAIN}/oauth2/callback'
       #     - 'https://prometheus.${SECRET_TS_DOMAIN}/oauth2/callback'
       #     - 'https://sealed-secrets.${SECRET_TS_DOMAIN}/oauth2/callback'
       # - id: grafana
       #   name: 'grafana'
       #   secret: '${DEX_GRAFANA_SECRET}'
       #   redirectURIs:
       #     - 'https://grafana.${CLUSTER_DOMAIN}/login/generic_oauth'
        - id: dex-k8s-authenticator
          name: dex-k8s-authenticator
          secret: ${SECRET_DEX_K8S_CLIENT_SECRET}
          redirectURIs:
            - https://login.${SECRET_TS_DOMAIN}/callback
        #- id: LitmusPortalAuthBackend
        #  name: 'LitmusPortalAuthBackend'
        #  secret: '${DEX_LITMUS_SECRET}'
        #  redirectURIs:
        #    - '/auth/dex/callback'
        #    - 'http://localhost:8080/auth/dex/callback' # Included for local testing purposes
        #- name: 'Weave GitOps Core'
        #  id: weave-gitops
        #  secret: '${DEX_WEAVE_GITOPS_SECRET}'
        #  redirectURIs:
        #    - 'https://wge.${CLUSTER_DOMAIN}/oauth2/callback'
        #    - 'https://gitops.${CLUSTER_DOMAIN}/oauth2/callback'
        #    - 'https://localhost:9001/oauth2/callback'
        #    - 'https://0.0.0.0:9001/oauth2/callback'
        #    - 'http://0.0.0.0:9001/oauth2/callback'
        #    - 'http://localhost:4567/oauth2/callback'
        #    - 'https://localhost:4567/oauth2/callback'
        #    - 'http://localhost:3000/oauth2/callback'
